/* schema-form - 0.0.1
 * Angular directives that produces form fields from json schema
 * https://your/lib/name/here
 */
(function(){angular.module("schemaForm",[])}).call(this),function(){angular.module("schemaForm").directive("schemaFormField",function(a,b){return{restrict:"EA",replace:!0,require:"^form",scope:{schema:"=",model:"=",field:"=",required:"=",editAs:"@"},link:function(c,d,e,f){var g;return c.formState=f,g=b.get(null!=c.schema["enum"]?"enumField.html":""+c.schema.type+"Field.html"),d.html(g),("number"===c.schema.type||"integer"===c.schema.type)&&d.find("input").attr("type","number"),d.find("input").attr("ng-required",c.required),c.schema.pattern&&d.find("input").attr("ng-pattern","/"+c.schema.pattern+"/"),d.find("input").attr("name",c.field),a(d.contents())(c)}}})}.call(this),function(){angular.module("schemaForm").directive("schemaFormFields",function(){return{restrict:"EA",scope:{schema:"=",model:"=",fields:"="},link:function(a){return a.required=function(a){return _.contains(this.schema.required,a)}},templateUrl:"schemaFormFields.html"}})}.call(this),angular.module("schemaForm").run(["$templateCache",function(a){a.put("booleanField.html",'<div class="form-group">\n  <label for="{{field}}">{{schema.title}}</label>\n  <input id="{{field}}" name="field" ng-model="model[field]" type="checkbox"></input>\n</div>\n'),a.put("enumField.html",'<div class="form-group">\n  <label for="{{field}}">{{schema.title}}</label>\n  <select id="{{field}}" name="{{field}}" ng-model="model[field]" ng-options="enumValue for enumValue in schema.enum"></select>\n</div>\n'),a.put("schemaFormFields.html",'<div ng-repeat="field in fields">\n  <schema-form-field field="field"\n    schema="schema.properties[field]"\n    model="model" required="required(field)">\n  </schema-form-field>\n</div>\n'),a.put("stringField.html",'<div class="form-group" ng-class="{\'has-error\': formState[field].$invalid}">\n  <label for="{{field}}" class="control-label">{{schema.title}}</label>\n  <input id="{{field}}" ng-attr-name="{{field}}" ng-model="model[field]" type="text" class="form-control"></input>\n</div>\n')}]);